@page "/usuario"
@page "/usuarios/{id:int}"


@inject IUserServices userServices
@inject IToastService toasServices
@inject NavigationManager _navServices
<div class="row justify-content-center  mt-3">
    <p class="col-sm-12 col-md-8 col-xl-10 h4 mt-2">@Titulo</p>
</div>
<div class="row justify-content-center  mt-3">
    <div class="col-sm-12 col-md-8 col-xl-10">
        <EditForm Model="modelo" OnValidSubmit="GuardarCambios">
            <DataAnnotationsValidator></DataAnnotationsValidator>

            <div class="input-group">
                <span class="input-group-text bg-light" id="basic-addon3">Nombre Completo</span>
                <input type="text" class="form-control" @bind-value="modelo.NombreCompleto">
            </div>
            <ValidationMessage For="@(()=>modelo.NombreCompleto)" />

            <div class="input-group mt-3">
                <span class="input-group-text bg-light" id="basic-addon3">Correo</span>
                <input type="text" class="form-control" @bind-value="modelo.Correo"><br />
            </div>
            <ValidationMessage For="@(()=>modelo.Correo)" />

            <div class="input-group mt-3">
                <span class="input-group-text bg-light" id="basic-addon3">Contraseña</span>
                <input type="password" class="form-control" @bind-value="modelo.Clave">
            </div>
            <ValidationMessage For="@(()=>modelo.Clave)" />

            <div class="input-group mt-3">
                <span class="input-group-text bg-light" id="basic-addon3">Confirmar Contraseña</span>
                <input type="password" class="form-control" @bind-value="modelo.ConfirmarClave">
            </div>
            <ValidationMessage For="@(()=>modelo.ConfirmarClave)" />

            <div class="mt-3">
                <button type="submit" class="btn btn-primary" style="width:130px">@Boton</button>
                <a href="/usuarios" class="btn btn-secondary" style="width:130px">Volver</a>
            </div>
        </EditForm>


    </div>

</div>
@code {
    [Parameter]
    public int Id { get; set; }
    private string Titulo = "Nuevo Usuario";
    private string Boton = "Crear Usuario";
    private UserDTO modelo = new UserDTO();

    protected override async Task OnParametersSetAsync()
    { 
        if(Id != 0)
        {
            Titulo = "Editar Usuario";
            Boton = "Actualizar";

            var response = await userServices.Obtener(Id);
            if(response.ItsRight)
            {
                modelo =(UserDTO)response.Result!;
                modelo.ConfirmarClave = modelo.Clave;

            } else
            {
                toasServices.ShowWarning(response.Message);
            }

        }

    }
    private async Task GuardarCambios()
    {
        if(modelo.Clave != modelo.ConfirmarClave)
        {
            toasServices.ShowWarning("Las contraseñas no coinciden");
            return;
        }

        bool respuesta= true;
        string mensaje = string.Empty;

        if(Id !=0)
        {
            var response = await userServices.Editar(modelo);
            if(response.ItsRight)
            {
                mensaje = "Usuario fue modificado";

            }
            else
            {
                respuesta = false;
                mensaje = " No se pudo editar";
            }

        }
        else
        {
            modelo.Rol = "Administrador";
            var response = await userServices.Crear(modelo);
            if (response.ItsRight)
            {
                mensaje = "Usuario fue creado";

            }
            else
            {
                respuesta = false;
                mensaje = " No se pudo crear";
            }
        }

        if (respuesta)
        {
            toasServices.ShowSuccess(mensaje);
            _navServices.NavigateTo("/usuarios");
        }
        else
        {
            toasServices.ShowWarning(mensaje);
        }
    }

}
