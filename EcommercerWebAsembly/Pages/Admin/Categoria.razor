@page "/categoria"
@page "/categoria/{id:int}"

@inject ICategoryServices categoryServices
@inject IToastService toasServices
@inject NavigationManager _navServices

<div class="row justify-content-center  mt-3">
    <p class="col-sm-12 col-md-8 col-xl-10 h4 mt-2">@Titulo</p>
</div>
<div class="row justify-content-center  mt-3">
    <div class="col-sm-12 col-md-8 col-xl-10">

        <EditForm Model="modelo" OnValidSubmit="GuardarCambios">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <div class="input-group">
                <span class="input-group-text bg-light">Nombre</span>
                <input type="text" class="form-control" @bind-value="modelo.Nombre">
            </div>
            <ValidationMessage For="@(()=>modelo.Nombre)" />

            <div class="mt-3">
                <button type="submit" class="btn btn-primary" style="width:130px">@Boton</button>
                <a href="/categorias" class="btn btn-secondary" style="width:130px">Volver</a>
            </div>
        </EditForm>


    </div>

</div>
@code {
    [Parameter]
    public int Id { get; set; }
    private string Titulo = "Nuevo Categoria";
    private string Boton = "Crear  Categoria";
    private CategoryDTO modelo = new CategoryDTO();
    
    protected override async Task OnParametersSetAsync()
    {
        if (Id != 0)
        {
            Titulo = "Editar categoria";
            Boton = "Actualizar";

            var response = await categoryServices.Obtener(Id);
            if (response.ItsRight)
            {
                modelo = (CategoryDTO)response.Result!;
                

            }
            else
            {
                toasServices.ShowWarning(response.Message);
            }

        }

    }
    private async Task GuardarCambios()
    {
       
        bool respuesta = true;
        string mensaje = string.Empty;

        if (Id != 0)
        {
            var response = await categoryServices.Editar(modelo);
            if (response.ItsRight)
            {
                mensaje = "Categoria fue modificado";

            }
            else
            {
                respuesta = false;
                mensaje = "No  pudo editar";
            }

        }
        else
        {
            var response = await categoryServices.Crear(modelo);
            if (response.ItsRight)
            {
                mensaje = "Categoria fue creado";

            }
            else
            {
                respuesta = false;
                mensaje = " No pudo crear";
            }
        }

        if (respuesta)
        {
            toasServices.ShowSuccess(mensaje);
            _navServices.NavigateTo("/categorias");
        }
        else
        {
            toasServices.ShowWarning(mensaje);
        }
    }
}
